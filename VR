-- sky vr


local loader = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local loader_2 = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local t = Instance.new("ImageLabel")
local UICorner_2 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local UICorner_3 = Instance.new("UICorner")
local errorr = Instance.new("TextLabel")
do
	loader.Name = "loader"
	loader.Parent = game.CoreGui
	loader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Frame.Parent = loader
	Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame.BackgroundTransparency = 1.000
	Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
	Frame.Size = UDim2.new(0.0824402273, 0, 0.163132131, 0)
	ImageLabel.Parent = Frame
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.Position = UDim2.new(-0.932431638, 0, -1.4126755, 0)
	ImageLabel.Size = UDim2.new(2.86000013, 0, 2.8599999, 0)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=17137351841"
	UIAspectRatioConstraint.Parent = Frame
	UIAspectRatioConstraint.AspectRatio = 0.988
	loader_2.Name = "loader"
	loader_2.Parent = Frame
	loader_2.BackgroundColor3 = Color3.fromRGB(148, 148, 148)
	loader_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	loader_2.BorderSizePixel = 0
	loader_2.Position = UDim2.new(-0.25999999, 0, 0.899999976, 0)
	loader_2.Size = UDim2.new(1.5, 0, 0.230000004, 0)
	loader_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
	loader_2.ImageTransparency = 1.000
	UICorner.CornerRadius = UDim.new(1, 100000)
	UICorner.Parent = loader_2
	t.Name = "t"
	t.Parent = loader_2
	t.BackgroundColor3 = Color3.fromRGB(0, 255, 102)
	t.BorderColor3 = Color3.fromRGB(0, 0, 0)
	t.BorderSizePixel = 0
	t.Size = UDim2.new(1, 0, 1, 0)
	t.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
	t.ImageTransparency = 1.000
	UICorner_2.CornerRadius = UDim.new(1, 100000)
	UICorner_2.Parent = t
	TextLabel.Parent = loader_2
	TextLabel.BackgroundColor3 = Color3.fromRGB(126, 126, 126)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(1, 0, 1, 0)
	TextLabel.Font = Enum.Font.TitilliumWeb
	TextLabel.Text = "Ready!"
	TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true
	UICorner_3.CornerRadius = UDim.new(1, 100000)
	UICorner_3.Parent = TextLabel
	errorr.Name = "error"
	errorr.Parent = Frame
	errorr.BackgroundColor3 = Color3.fromRGB(126, 126, 126)
	errorr.BackgroundTransparency = 1.000
	errorr.BorderColor3 = Color3.fromRGB(0, 0, 0)
	errorr.BorderSizePixel = 0
	errorr.Position = UDim2.new(-1.07771266, 0, 0.74733454, 0)
	errorr.Size = UDim2.new(3.15542507, 0, 0.524423599, 0)
	errorr.Visible = false
	errorr.Font = Enum.Font.Unknown
	errorr.Text = "VR is required for this script"
	errorr.TextColor3 = Color3.fromRGB(255, 20, 20)
	errorr.TextScaled = true
	errorr.TextSize = 14.000
	errorr.TextStrokeTransparency = 0.000
	errorr.TextWrapped = true
end

local global = getgenv()

TextLabel.Text = "Loading..."
t:TweenSize(UDim2.new(0,0,1,0),nil,Enum.EasingStyle.Linear,0)
wait(0.01)
t:TweenSize(UDim2.new(0.3,0,1,0),nil,Enum.EasingStyle.Linear,0.8)
wait(0.81)
if not game:GetService("UserInputService").VREnabled and not getgenv().fullbody then
	errorr.Visible = true
	t.Parent.Visible = false
	wait(5)
	loader:Destroy()
	return
end
if getgenv().skyVRversion ~= '3.0.0' then
	errorr.Text = "Please update your script loader!"
	errorr.Visible = true
	t.Parent.Visible = false
	wait(5)
	loader:Destroy()
	return
end
t:TweenSize(UDim2.new(1,0,1,0),nil,Enum.EasingStyle.Linear,0.1)
wait(0.06)
if getgenv().HATDROP and not getgenv().fullbody then
	loadstring(game:HttpGet("https://raw.githubusercontent.com/presidentanvil/skyvr/main/SkyVRHatdrop.lua"))()
	TextLabel.Text = "Ready!"
	task.delay(5,function()
		loader:Destroy()
	end)
	return
end
if getgenv().fullbody then
	loadstring(game:HttpGet("https://raw.githubusercontent.com/presidentanvil/skyvr/main/SkyVRFullbody.lua"))()
	TextLabel.Text = "Ready!"
	task.delay(5,function()
		loader:Destroy()
	end)
	return
end
local plr = game.Players.LocalPlayer
local input = game:GetService("UserInputService")


local function createpart(size, name,h)
	local Part = Instance.new("Part")
	Part.Parent = workspace
	Part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	Part.Size = size
	Part.Transparency = 1
	Part.CanCollide = false
	Part.Anchored = true
	Part.Name = name
	return Part
end
local ps = game:GetService("RunService").PostSimulation
local input = game:GetService("UserInputService")
local fpdh = game.Workspace.FallenPartsDestroyHeight
local Player = game.Players.LocalPlayer
local options = getgenv().options

local lefthandpart = createpart(Vector3.new(2,1,1), "moveRH",true)
local righthandpart = createpart(Vector3.new(2,1,1), "moveRH",true)
local headpart = createpart(Vector3.new(1,1,1), "moveH",false)
local lefttoypart = createpart(Vector3.new(1,1,1), "LToy",true)
local righttoypart =  createpart(Vector3.new(1,1,1), "RToy",true)
local lefttoypart2 = createpart(Vector3.new(1,1,1), "LToy2",true)
local righttoypart2 =  createpart(Vector3.new(1,1,1), "RToy2",true)
local thirdperson = false
local lefttoyenable = false
local righttoyenable = false
local lefttoyenable2 = false
local righttoyenable2 = false
local lfirst = true
local rfirst = true
local ltoypos = CFrame.new(1.15,0,0) * CFrame.Angles(0,math.rad(180),0)
local rtoypos = CFrame.new(1.15,0,0) * CFrame.Angles(0,math.rad(0),0)
local ltoypos2 = CFrame.new(1.15,0,0) * CFrame.Angles(0,math.rad(180),0)
local rtoypos2 = CFrame.new(1.15,0,0) * CFrame.Angles(0,math.rad(0),0)
local parts = {
	left=lefthandpart,
	right=righthandpart,
	headhats=headpart,
	leftToy=lefttoypart,
	rightToy=righttoypart,
	leftToy2=lefttoypart2,
	rightToy2=righttoypart2,
}
function _isnetworkowner(Part)
	return Part.ReceiveAge == 0
end

game.Workspace.FallenPartsDestroyHeight=0/0

function filterMeshID(id)
	return (string.find(id,'assetdelivery')~=nil and string.match(string.sub(id,37,#id),"%d+")) or string.match(id,"%d+")
end

function findMeshID(id)
	for i,v in pairs(getgenv().headhats) do
		if i=="meshid:"..id then return true,"headhats" end
	end
	if getgenv().right=="meshid:"..id then return true,"right" end
	if getgenv().left=="meshid:"..id then return true,"left" end
	if options.leftToy=="meshid:"..id then return true,"leftToy" end
	if options.rightToy=="meshid:"..id then return true,"rightToy" end
	if options.rightToy2=="meshid:"..id then return true,"rightToy2" end
	if options.leftToy2=="meshid:"..id then return true,"leftToy2" end
	return false
end

function findHatName(id)
	for i,v in pairs(getgenv().headhats) do
		if i==id then return true,"headhats" end
	end
	if getgenv().right==id then return true,"right" end
	if getgenv().left==id then return true,"left" end
	if options.leftToy==id then return true,"leftToy" end
	if options.rightToy==id then return true,"rightToy" end
	if options.rightToy2=="meshid:"..id then return true,"rightToy2" end
	if options.leftToy2=="meshid:"..id then return true,"leftToy2" end
	return false
end

function Align(Part1,Part0,cf,isflingpart) 
	local up = isflingpart
	local con;con=ps:Connect(function()
		if up~=nil then up=not up end
		if not Part1:IsDescendantOf(workspace) then con:Disconnect() return end
		if not _isnetworkowner(Part1) then return end
		Part1.CanCollide=false
		Part1.CFrame=Part0.CFrame*cf
		Part1.Velocity = velocity or Vector3.new(20,20,20)
	end)

	return {SetVelocity = function(self,v) velocity=v end,SetCFrame = function(self,v) cf=v end,}
end

function getAllHats(Character)
	local allhats = {}
	local foundmeshids = {}
	for i,v in pairs(Character:GetChildren()) do
		if not v:IsA"Accessory" then continue end
		if not v.Handle:FindFirstChildOfClass("SpecialMesh") then continue end

		local is,d = findMeshID(filterMeshID(v.Handle:FindFirstChildOfClass("SpecialMesh").MeshId))
		if foundmeshids["meshid:"..filterMeshID(v.Handle:FindFirstChildOfClass("SpecialMesh").MeshId)] then is = false else foundmeshids["meshid:"..filterMeshID(v.Handle:FindFirstChildOfClass("SpecialMesh").MeshId)] = true end

		if is then
			table.insert(allhats,{v,d,"meshid:"..filterMeshID(v.Handle:FindFirstChildOfClass("SpecialMesh").MeshId)})
		else
			local is,d = findHatName(v.Name)
			if not is then continue end
			table.insert(allhats,{v,d,v.Name})
		end
	end
	return allhats
end

function HatdropCallback(Character, callback)
	Character:WaitForChild("Humanoid")
	Character:WaitForChild("HumanoidRootPart")
	task.wait(0.4)
	local AnimationInstance = Instance.new("Animation");AnimationInstance.AnimationId = "rbxassetid://35154961"
	workspace.FallenPartsDestroyHeight = 0/0
	local hrp = Character.HumanoidRootPart
	local startCF = Character.HumanoidRootPart.CFrame
	local torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("LowerTorso")
	local Track = Character.Humanoid.Animator:LoadAnimation(AnimationInstance)
	Track:Play()
	Track.TimePosition = 3.24
	Track:AdjustSpeed(0)
	local locks = {}
	for i,v in pairs(Character.Humanoid:GetAccessories()) do
		table.insert(locks,v.Changed:Connect(function(p)
			if p == "BackendAccoutrementState" then
				sethiddenproperty(v,"BackendAccoutrementState",0)
			end
		end))
		sethiddenproperty(v,"BackendAccoutrementState",2)
	end
	local c;c=game:GetService("RunService").PostSimulation:Connect(function()
		if(not Character:FindFirstChild("HumanoidRootPart"))then c:Disconnect()return;end

		hrp.Velocity = Vector3.new(0,0,25)
		hrp.RotVelocity = Vector3.new(0,0,0)
		hrp.CFrame = CFrame.new(startCF.X,fpdh+.25,startCF.Z) * (Character:FindFirstChild("Torso") and CFrame.Angles(math.rad(90),0,0) or CFrame.new())
	end)
	task.wait(.35)
	callback(getAllHats(Character))
	Character.Humanoid:ChangeState(15)
	torso.AncestryChanged:Wait()
	for i,v in pairs(locks) do
		v:Disconnect()
	end
	for i,v in pairs(Character.Humanoid:GetAccessories()) do
		sethiddenproperty(v,"BackendAccoutrementState",4)
	end
end


local cam = workspace.CurrentCamera

game:GetService("StarterGui"):SetCore("VREnableControllerModels", false)
local rightarmalign = nil
getgenv().con5 = input.UserCFrameChanged:connect(function(part,move)
	cam.CameraType = "Scriptable"
	cam.HeadScale = options.headscale
	if part == Enum.UserCFrame.Head then
		headpart.CFrame = cam.CFrame*(CFrame.new(move.p*(cam.HeadScale-1))*move)
		--thirdpersonpart.CFrame = cam.CFrame * (CFrame.new(move.p*(cam.HeadScale-1))*move) * CFrame.new(0,0,-10) * CFrame.Angles(math.rad(180),0,math.rad(180))
	elseif part == Enum.UserCFrame.LeftHand then
		lefthandpart.CFrame = cam.CFrame*(CFrame.new(move.p*(cam.HeadScale-1))*move*CFrame.Angles(math.rad(options.lefthandrotoffset.X),math.rad(options.lefthandrotoffset.Y),math.rad(options.lefthandrotoffset.Z)))
		if lefttoyenable then
			lefttoypart.CFrame = lefthandpart.CFrame * ltoypos
		end
		if lefttoyenable2 then
			lefttoypart2.CFrame = lefthandpart.CFrame * ltoypos2
		end
	elseif part == Enum.UserCFrame.RightHand then
		righthandpart.CFrame = cam.CFrame*(CFrame.new(move.p*(cam.HeadScale-1))*move*CFrame.Angles(math.rad(options.righthandrotoffset.X),math.rad(options.righthandrotoffset.Y),math.rad(options.righthandrotoffset.Z)))
		if righttoyenable then
			righttoypart.CFrame = righthandpart.CFrame * rtoypos
		end
		if righttoyenable2 then
			righttoypart2.CFrame = righthandpart.CFrame * rtoypos2
		end
	end
end)

getgenv().con4 = input.InputBegan:connect(function(key)
	if key.KeyCode == options.thirdPersonButtonToggle then
		thirdperson = not thirdperson -- disabled?
	end
	if key.KeyCode == Enum.KeyCode.ButtonR1 then
		R1down = true
	end
	if key.KeyCode == options.leftToyBind then
		if not lfirst then
			ltoypos = lefttoypart.CFrame:ToObjectSpace(lefthandpart.CFrame):Inverse()
		end
		lfirst = false
		lefttoyenable = not lefttoyenable
	end
	if key.KeyCode == options.rightToyBind then
		if not rfirst then
			rtoypos = righttoypart.CFrame:ToObjectSpace(righthandpart.CFrame):Inverse()
		end
		rfirst = false
		righttoyenable = not righttoyenable
	end
	if key.KeyCode == options.leftToyBind2 then
		if not lfirst then
			ltoypos2 = lefttoypart2.CFrame:ToObjectSpace(lefthandpart.CFrame):Inverse()
		end
		lfirst = false
		lefttoyenable2 = not lefttoyenable2
	end
	if key.KeyCode == options.rightToyBind2 then
		if not rfirst then
			rtoypos2 = righttoypart2.CFrame:ToObjectSpace(righthandpart.CFrame):Inverse()
		end
		rfirst = false
		righttoyenable2 = not righttoyenable2
	end
	if key.KeyCode == Enum.KeyCode.ButtonR2 and rightarmalign~=nil then
		R2down = true
	end
end)

getgenv().con3 = input.InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.ButtonR1 then
		R1down = false
	end
	if key.KeyCode == Enum.KeyCode.ButtonR2 and rightarmalign~=nil then
		R2down = false
	end
end)
local negitive = true
getgenv().con2 = game:GetService("RunService").RenderStepped:connect(function()
	-- righthandpart.CFrame*CFrame.Angles(-math.rad(options.righthandrotoffset.X),-math.rad(options.righthandrotoffset.Y),math.rad(180-options.righthandrotoffset.X))
	if R1down then
		cam.CFrame = cam.CFrame:Lerp(cam.CoordinateFrame + (righthandpart.CFrame * CFrame.Angles(math.rad(options.righthandrotoffset.X),math.rad(options.righthandrotoffset.Y),math.rad(options.righthandrotoffset.Z)):Inverse() * CFrame.Angles(math.rad(options.controllerRotationOffset.X),math.rad(options.controllerRotationOffset.Y),math.rad(options.controllerRotationOffset.Z))).LookVector * cam.HeadScale/2, 0.5)
	end
	if R2down then
		negitive=not negitive
		rightarmalign:SetVelocity(Vector3.new(0,0,-99999999))
		rightarmalign:SetCFrame(CFrame.Angles(math.rad(options.righthandrotoffset.X),math.rad(options.righthandrotoffset.Y),math.rad(options.righthandrotoffset.Z)):Inverse()*CFrame.new(0,0,8*(negitive and -1 or 1)))
	else
		rightarmalign:SetVelocity(Vector3.new(20,20,20))
		rightarmalign:SetCFrame(CFrame.new(0,0,0))
	end
end)

HatdropCallback(Player.Character, function(allhats)
	for i,v in pairs(allhats) do
		if not v[1]:FindFirstChild("Handle") then continue end
		if v[2]=="headhats" then v[1].Handle.Transparency = options.HeadHatTransparency or 1 end

		local align = Align(v[1].Handle,parts[v[2]],((v[2]=="headhats")and getgenv()[v[2]][(v[3])]) or CFrame.identity)
		rightarmalign = v[2]=="right" and align or rightarmalign
	end
end)

getgenv().conn = Player.CharacterAdded:Connect(function(Character)
	HatdropCallback(Player.Character, function(allhats)
		for i,v in pairs(allhats) do
			if not v[1]:FindFirstChild("Handle") then continue end
			if v[2]=="headhats" then v[1].Handle.Transparency = options.HeadHatTransparency or 1 end

			local align = Align(v[1].Handle,parts[v[2]],((v[2]=="headhats")and getgenv()[v[2]][(v[3])]) or CFrame.identity)
			rightarmalign = v[2]=="right" and align or rightarmalign
		end
	end)
end)
